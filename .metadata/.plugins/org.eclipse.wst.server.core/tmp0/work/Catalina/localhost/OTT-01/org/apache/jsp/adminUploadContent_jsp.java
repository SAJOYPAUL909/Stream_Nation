/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.67
 * Generated at: 2023-07-29 05:02:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminUploadContent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js\"></script>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,300;0,900;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("	#mainBox{\r\n");
      out.write("		height: 150vh;\r\n");
      out.write("		width: 100vw;\r\n");
      out.write("		background-image: url(images/bluredadmin.jpg);\r\n");
      out.write("		background-repeat: no-repeat;\r\n");
      out.write("		background-size: cover;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.shadow{\r\n");
      out.write("		box-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("	\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<!-- user , admin -->\r\n");
      out.write("<!-- admin , media  -->\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container-fluid\" id=\"mainBox\">\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"d-flex flex-column align-items-center\">\r\n");
      out.write("		 \r\n");
      out.write("			<h1 class=\"text-light pt-3 mb-5\" style=\"font-family: 'Montserrat', sans-serif; font-weight: 900\">Upload Media Information</h1>\r\n");
      out.write("			\r\n");
      out.write("			<form class=\"shadow p-3\"  id=\"myform\" onsubmit=\"submitDetails(event)\">\r\n");
      out.write("			<div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"name\" class=\"form-label text-light\">Type name</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"name\" name=\"name\" required>\r\n");
      out.write("			 </div>\r\n");
      out.write("			  	  \r\n");
      out.write("			  <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"category\" class=\"form-label text-light\">Type category</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"category\" name=\"category\" placeholder=\"ex: action,thriller etc\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			  	\r\n");
      out.write("			   <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"ratings\" class=\"form-label text-light\">Type ratings out of 10</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"ratings\" placeholder=\"ex: 5, 5.2\" name=\"ratings\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			   \r\n");
      out.write("			    <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"length\" class=\"form-label text-light\">Type media length</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"length\" placeholder=\"ex: 02:30:15 (hh:mm:ss)\" name=\"length\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			 \r\n");
      out.write("			 \r\n");
      out.write("			 	<div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"description\" class=\"form-label text-light\">Type description</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"description\" name=\"description\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			   \r\n");
      out.write("			   <div class=\"mb-3\">\r\n");
      out.write("			    <label for=\"directorName\" class=\"form-label text-light\">Type directors name</label>\r\n");
      out.write("			    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"directorName\" name=\"directorName\" placeholder=\"ex: Rajkumar Hirani,Neeraj Pandey\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			   \r\n");
      out.write("			    <div class=\"mb-3\">\r\n");
      out.write("				    <label for=\"actors\" class=\"form-label text-light\">Type actors name</label>\r\n");
      out.write("				    <input type=\"text\" class=\"form-control bg-dark text-light border-0\" id=\"actors\" name=\"actors\" placeholder=\"ex: Vin Diesel,Tom Cruise\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			   \r\n");
      out.write("			   \r\n");
      out.write("			   <div class=\"mb-3\">\r\n");
      out.write("				    <label for=\"releaseDate\" class=\"form-label text-light\">Upload release date</label>\r\n");
      out.write("				    <input type=\"text\"  class=\"form-control bg-dark text-light border-0\" id=\"releaseDate\" name=\"releaseDate\" placeholder=\"ex: 2023-03-10 (yyyy-mm-dd)\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			 \r\n");
      out.write("			   <div class=\"mb-3\">\r\n");
      out.write("				    <label for=\"video\" class=\"form-label text-light\">Upload video</label>\r\n");
      out.write("				    <input type=\"file\" class=\"form-control bg-dark text-light border-0\" id=\"video\" name=\"video\" accept=\".mp4, .avi, .mov, .video/*\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("\r\n");
      out.write("			   <div class=\"mb-3\">\r\n");
      out.write("				    <label for=\"thumbnail\" class=\"form-label text-light\">Upload thumbnail</label>\r\n");
      out.write("				    <input type=\"file\" class=\"form-control bg-dark text-light border-0\" id=\"thumbnail\" name=\"thumbnail\" accept=\".jpg, .jpeg, .png\" required>\r\n");
      out.write("			   </div>\r\n");
      out.write("			   \r\n");
      out.write("			  <button class=\"btn btn-primary\">Submit</button>\r\n");
      out.write("			</form>\r\n");
      out.write("						\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("	function showAlert(title, text, icon, button) {\r\n");
      out.write("		Swal.fire({\r\n");
      out.write("            title: title,\r\n");
      out.write("            text: text,\r\n");
      out.write("            icon: icon,\r\n");
      out.write("            confirmButtonText: button\r\n");
      out.write("        });\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function submitDetails(event) {\r\n");
      out.write("		\r\n");
      out.write("		event.preventDefault();\r\n");
      out.write("		\r\n");
      out.write("		let formData = new FormData($(\"#myform\")[0]);\r\n");
      out.write("		for (let [key, value] of formData.entries()) {\r\n");
      out.write("			  console.log(key, value);\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	 	$.ajax({\r\n");
      out.write("            url: \"upload-media-info\",\r\n");
      out.write("            type: \"POST\",\r\n");
      out.write("            data: formData,\r\n");
      out.write("            contentType: false,\r\n");
      out.write("            processData: false,\r\n");
      out.write("            success: function (data) {\r\n");
      out.write("				\r\n");
      out.write("				let cause = data.trim();\r\n");
      out.write("                 switch(cause){\r\n");
      out.write("                 \r\n");
      out.write("                 	case \"empty-name\":\r\n");
      out.write("                 		showAlert('Dear User!', 'empty media name!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 		\r\n");
      out.write("                 	case \"empty-category\":\r\n");
      out.write("                 		showAlert('Dear User!', 'empty category!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 		\r\n");
      out.write("                 	case \"wrong-length\" :\r\n");
      out.write("                 		document.getElementById(\"length\").value = \"\";\r\n");
      out.write("                 		showAlert('Dear User!', 'wrong length!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 	\r\n");
      out.write("                 	case \"empty-description\":\r\n");
      out.write("                 		showAlert('Dear User!', 'empty description!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 		\r\n");
      out.write("                 	case \"empty-director-name\":\r\n");
      out.write("	             		showAlert('Dear User!', 'empty director name!', 'error', 'Try Again');\r\n");
      out.write("	             		break;\r\n");
      out.write("                 		\r\n");
      out.write("                 	case \"empty-actor-name\":\r\n");
      out.write("	             		showAlert('Dear User!', 'empty actor name!', 'error', 'Try Again');\r\n");
      out.write("	             		break;\r\n");
      out.write("	             		\r\n");
      out.write("                 	case \"wrong-date\":\r\n");
      out.write("                 		document.getElementById(\"releaseDate\").value = \"\";\r\n");
      out.write("                 		showAlert('Dear User!', 'wrong release date!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 	\r\n");
      out.write("                 	case \"NumberFormatException\":\r\n");
      out.write("                 		document.getElementById(\"ratings\").value = \"\";\r\n");
      out.write("                 		showAlert('Dear User!', 'wrong ratings!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 	\r\n");
      out.write("                 	case \"empty-thumbnail\":\r\n");
      out.write("                 		showAlert('Dear User!', 'no thumbnail found!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 		\r\n");
      out.write("                 	case \"empty-video\":\r\n");
      out.write("                 		showAlert('Dear User!', 'no video found!', 'error', 'Try Again');\r\n");
      out.write("                 		break;\r\n");
      out.write("                 	default:\r\n");
      out.write("                 		showAlert('Dear User!', 'Media uploaded successfully!', 'success', 'ok');\r\n");
      out.write("                 		setTimeout(function() {\r\n");
      out.write("                 			location.reload();\r\n");
      out.write("                 		}, 2000);\r\n");
      out.write("                 		break;\r\n");
      out.write("                 }\r\n");
      out.write("            	\r\n");
      out.write("            },\r\n");
      out.write("            error: function (xhr, status, error) {\r\n");
      out.write("                console.error(\"Error:\", error);\r\n");
      out.write("            }\r\n");
      out.write("        }); \r\n");
      out.write("	 \r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
