/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.67
 * Generated at: 2023-08-04 06:14:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import dto.Media;

public final class adminShowMediaList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tag.tld", Long.valueOf(1690947536009L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dto.Media");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Show all Media</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js\"></script>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,300;0,900;1,100;1,200;1,400;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("	#mainBox{\r\n");
      out.write("		height: 350vh;\r\n");
      out.write("		width: 100vw;\r\n");
      out.write("		background-image: url(images/bluredadmin.jpg);\r\n");
      out.write("		background-repeat: no-repeat;\r\n");
      out.write("		background-size: cover;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.shadow{\r\n");
      out.write("		box-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.fontOne {\r\n");
      out.write("	  font-family: 'Montserrat', sans-serif;\r\n");
      out.write("	  font-style: italic;\r\n");
      out.write("	  font-weight: 400;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid\" id=\"mainBox\">\r\n");
      out.write("		\r\n");
      out.write("	<div class=\"d-flex flex-column align-items-center\">\r\n");
      out.write("		 \r\n");
      out.write("		<h1 class=\"text-light pt-3 mb-5\" style=\"font-family: 'Montserrat', sans-serif; font-weight: 900\">See All Media List</h1>\r\n");
      out.write("\r\n");
      out.write("		");
      if (_jspx_meth_mytag_005fprintmedialist_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("		");
 
		
			int offset = (Integer)request.getAttribute("offset");
			int limit = (Integer)request.getAttribute("limit");
			int remaining = (Integer)request.getAttribute("remaining");

			if(remaining != 0 && limit <= remaining) {
				
				/* for next 5 elements */
				offset+=5;
				remaining-=5;
				
				String url = "get-list-media?offset="+offset+"&remaining="+remaining+"&limit="+limit+"&visitToJsp="+"yes";
				out.println("<a href='" + url + "' class='btn btn-outline-light text-decoration-none'>NEXT PAGE</a>");
				
			}
			

			else if(remaining != 0 && limit > remaining) {
				
				offset+=5;
				limit = remaining;
				remaining = 0;
				
				
				request.setAttribute("limit", limit);
				request.setAttribute("remaining", remaining);
				request.setAttribute("offset", offset);
				String url = "get-list-media?offset="+offset+"&remaining="+remaining+"&limit="+limit+"&visitToJsp="+"yes";
				out.println("<a href='" + url + "' class='btn btn-outline-light text-decoration-none'>NEXT PAGE</a>");
			}

			
			else {
				
				out.println("<h1 class='text-light pt-3 mb-5' style=\"font-family: 'Montserrat', sans-serif; font-weight: 900\">No Item Is Left Now</h1>");
				
			}
		
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_mytag_005fprintmedialist_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  mytag:printmedialist
    custometags.PrintMediaListToJsp _jspx_th_mytag_005fprintmedialist_005f0 = new custometags.PrintMediaListToJsp();
    _jsp_getInstanceManager().newInstance(_jspx_th_mytag_005fprintmedialist_005f0);
    try {
      _jspx_th_mytag_005fprintmedialist_005f0.setJspContext(_jspx_page_context);
      // /adminShowMediaList.jsp(48,2) name = list type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_mytag_005fprintmedialist_005f0.setList((java.util.List) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.mediaList}", java.util.List.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      _jspx_th_mytag_005fprintmedialist_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_mytag_005fprintmedialist_005f0);
    }
    return false;
  }
}
